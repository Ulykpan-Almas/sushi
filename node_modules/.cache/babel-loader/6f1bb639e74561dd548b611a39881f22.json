{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Almas\\\\REACT\\\\SUSHI\\\\sushi-app\\\\src\\\\components\\\\common\\\\Menu\\\\Menu.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './Menu.css';\nimport MenuItem from './MenuItem/MenuItem';\nimport { ascending } from \"./data\";\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Menu = _ref => {\n  _s();\n\n  let {\n    list\n  } = _ref;\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n\n  const handleChange = event => {\n    setSearchTerm(event.target.value);\n  };\n\n  useEffect(() => {\n    const results = people.filter(person => person.toLowerCase().includes(searchTerm.toLowerCase()));\n    setSearchResults(results);\n  }, [searchTerm]);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search\",\n      value: searchTerm,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), searchResults.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: item\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }, this)), list.map(item => /*#__PURE__*/_jsxDEV(MenuItem, {\n      item: item\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Menu, \"vFVq2CqhFvuwfi/Qub5hbBnO1R0=\");\n\n_c = Menu;\nexport default Menu;\n\nvar _c;\n\n$RefreshReg$(_c, \"Menu\");","map":{"version":3,"sources":["C:/Users/Almas/REACT/SUSHI/sushi-app/src/components/common/Menu/Menu.jsx"],"names":["React","MenuItem","ascending","useState","useEffect","Menu","list","searchTerm","setSearchTerm","searchResults","setSearchResults","handleChange","event","target","value","results","people","filter","person","toLowerCase","includes","map","item","id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,YAAP;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,SAAQC,SAAR,QAAwB,QAAxB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,QAA0B,OAA1B;;;AAEA,MAAMC,IAAI,GAAG,QAAY;AAAA;;AAAA,MAAX;AAACC,IAAAA;AAAD,GAAW;AAEvB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BL,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACM,aAAD,EAAgBC,gBAAhB,IAAoCP,QAAQ,CAAC,EAAD,CAAlD;;AAEA,QAAMQ,YAAY,GAAGC,KAAK,IAAI;AAC5BJ,IAAAA,aAAa,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAb;AACD,GAFD;;AAIAV,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMW,OAAO,GAAGC,MAAM,CAACC,MAAP,CAAcC,MAAM,IAClCA,MAAM,CAACC,WAAP,GAAqBC,QAArB,CAA8Bb,UAAU,CAACY,WAAX,EAA9B,CADc,CAAhB;AAGAT,IAAAA,gBAAgB,CAACK,OAAD,CAAhB;AACD,GALQ,EAKN,CAACR,UAAD,CALM,CAAT;AAOA,sBAEA;AAAA,4BAEI;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,WAAW,EAAC,QAFd;AAGE,MAAA,KAAK,EAAEA,UAHT;AAIE,MAAA,QAAQ,EAAEI;AAJZ;AAAA;AAAA;AAAA;AAAA,YAFJ,EASOF,aAAa,CAACY,GAAd,CAAkBC,IAAI,iBACrB;AAAA,gBAAKA;AAAL;AAAA;AAAA;AAAA;AAAA,YADD,CATP,EAaGhB,IAAI,CAACe,GAAL,CAAUC,IAAD,iBACR,QAAC,QAAD;AAAU,MAAA,IAAI,EAAEA;AAAhB,OAA2BA,IAAI,CAACC,EAAhC;AAAA;AAAA;AAAA;AAAA,YADD,CAbH;AAAA;AAAA;AAAA;AAAA;AAAA,UAFA;AAoBD,CApCD;;GAAMlB,I;;KAAAA,I;AAsCN,eAAeA,IAAf","sourcesContent":["import React from 'react';\r\nimport './Menu.css';\r\nimport MenuItem from './MenuItem/MenuItem';\r\nimport {ascending} from \"./data\"\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\n\r\nconst Menu = ({list}) => {\r\n\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [searchResults, setSearchResults] = useState([]);\r\n\r\n  const handleChange = event => {\r\n    setSearchTerm(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const results = people.filter(person =>\r\n      person.toLowerCase().includes(searchTerm.toLowerCase())\r\n    );\r\n    setSearchResults(results);\r\n  }, [searchTerm]);\r\n\r\n  return(\r\n    \r\n  <main>\r\n\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Search\"\r\n        value={searchTerm}\r\n        onChange={handleChange}\r\n      />\r\n\r\n        {searchResults.map(item => (\r\n          <li>{item}</li>\r\n        ))}\r\n\r\n    {list.map((item) => (\r\n      <MenuItem item={item} key={item.id}/>\r\n    ))}\r\n  </main>\r\n  )\r\n};\r\n\r\nexport default Menu;"]},"metadata":{},"sourceType":"module"}